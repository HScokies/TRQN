// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TRQN.Backend.Data;

#nullable disable

namespace TRQN.Backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231118125149_NoShortDescr")]
    partial class NoShortDescr
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TRQN.Backend.Models.Cart", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("sizeId")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("sizeId");

                    b.HasIndex("userId");

                    b.ToTable("cart");
                });

            modelBuilder.Entity("TRQN.Backend.Models.Category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("categories");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name = "Sneakers"
                        },
                        new
                        {
                            id = 2,
                            name = "High-Tops"
                        },
                        new
                        {
                            id = 3,
                            name = "Retro"
                        },
                        new
                        {
                            id = 4,
                            name = "Skate"
                        });
                });

            modelBuilder.Entity("TRQN.Backend.Models.Country", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("shipping")
                        .HasColumnType("smallmoney");

                    b.Property<decimal>("tax")
                        .HasColumnType("decimal(3,2)");

                    b.HasKey("id");

                    b.ToTable("countries");
                });

            modelBuilder.Entity("TRQN.Backend.Models.Product", b =>
                {
                    b.Property<string>("SKU")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("categoryid")
                        .HasColumnType("int");

                    b.Property<string>("colorway")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("releaseDate")
                        .HasColumnType("date");

                    b.HasKey("SKU");

                    b.HasIndex("categoryid");

                    b.ToTable("products");
                });

            modelBuilder.Entity("TRQN.Backend.Models.Size", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<decimal>("price")
                        .HasColumnType("smallmoney");

                    b.Property<string>("productId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("size")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("productId");

                    b.ToTable("sizes");
                });

            modelBuilder.Entity("TRQN.Backend.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("role")
                        .HasColumnType("int");

                    b.Property<Guid>("token")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("TRQN.Backend.Models.Cart", b =>
                {
                    b.HasOne("TRQN.Backend.Models.Size", "size")
                        .WithMany()
                        .HasForeignKey("sizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TRQN.Backend.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("size");

                    b.Navigation("user");
                });

            modelBuilder.Entity("TRQN.Backend.Models.Product", b =>
                {
                    b.HasOne("TRQN.Backend.Models.Category", "category")
                        .WithMany()
                        .HasForeignKey("categoryid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");
                });

            modelBuilder.Entity("TRQN.Backend.Models.Size", b =>
                {
                    b.HasOne("TRQN.Backend.Models.Product", "product")
                        .WithMany("sizes")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");
                });

            modelBuilder.Entity("TRQN.Backend.Models.Product", b =>
                {
                    b.Navigation("sizes");
                });
#pragma warning restore 612, 618
        }
    }
}
